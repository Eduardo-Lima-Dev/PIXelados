generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String
  accounts      Account[]
  sessions      Session[]
  house         House?    @relation("HouseMembers", fields: [houseId], references: [id])
  houseId       String?
  paidExpenses  Expense[] @relation("PaidBy")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model House {
  id         String    @id @default(cuid())
  name       String
  address    String?
  inviteCode String    @unique
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  members    User[]    @relation("HouseMembers")
  expenses   Expense[]
}

model Expense {
  id          String   @id @default(cuid())
  title       String
  amount      Float
  dueDate     DateTime
  description String?
  status      String   @default("Pendente")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  house       House    @relation(fields: [houseId], references: [id])
  houseId     String
  paidBy      User     @relation("PaidBy", fields: [paidById], references: [id])
  paidById    String
}
